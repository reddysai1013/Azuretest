name: 'Chekly Terraform CI/CD'

permissions:
  contents: read
  pull-requests: read
  id-token: write

on:
  pull_request:
    types: [closed]
    branches:
      - main
#    paths:
#      - 'platform/staging/**'
#      - 'platform/production/**'
#      - 'platform/modules-euna/**'

jobs:
  changes:
    name: 'Detect Changes'
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      staging: ${{ steps.filter.outputs.staging }}
      production: ${{ steps.filter.outputs.production }}
      modules-euna: ${{ steps.filter.outputs.modules-euna }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            staging:
              - 'platform/staging/**'
            production:
              - 'platform/production/**'
            modules-euna:
              - 'platform/modules-euna/**'

#  plan-staging:
#    name: 'Plan Staging'
#    runs-on: ubuntu-latest
#    needs: changes
#    if: needs.changes.outputs.staging == 'true' || needs.changes.outputs.modules-euna == 'true'
#    defaults:
#      run:
#        working-directory: ./platform/staging
#    env:
#      TF_VAR_checkly_account_id: ${{ secrets.CHECKLY_ACCOUNT_ID }}
#      TF_VAR_checkly_api_key: ${{ secrets.CHECKLY_API_KEY }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          submodules: 'recursive'
#          token: ${{ secrets.PAT_TOKEN }}
#      - name: Configure AWS Credentials via OIDC
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: arn:aws:iam::637423371551:role/ChecklyTetsing
#          aws-region: us-east-2    
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#      - name: Clean up existing global files
#        run: |
#          rm -f global_modules.tf global_variables.tf  
#      - name: Create Symlinks for Shared Files
#        run: |
#          ln -s ../global_modules.tf .
#          ln -s ../global_variables.tf .   
#      - name: Terraform Init
#        run: terraform init
#      - name: Terraform Format
#        run: terraform fmt -recursive
#      - name: Terraform Validate
#        run: terraform validate
#      - name: Terraform Plan
#        run: terraform plan -out=staging.tfplan -input=false
#      - name: Upload Plan
#        uses: actions/upload-artifact@v4
#        with:
#          name: staging-plan
#          path: ./platform/staging/staging.tfplan
#      - name: Upload Lock File
#        uses: actions/upload-artifact@v4
#        with:
#          name: staging-lock
#          path: platform/staging/.terraform.lock.hcl
#          include-hidden-files: true    
#      - name: Cleanup Terraform files
#        run: |
#          rm -rf .terraform
#          rm -f terraform.tfstate terraform.tfstate.backup
#          rm -f *.tfplan
#          rm -f .terraform.lock.hcl
#        working-directory: ./platform/staging    
#
#  apply-staging:
#    name: 'Apply Staging'
#    runs-on: ubuntu-latest
#    needs: plan-staging
#    if: needs.plan-staging.result == 'success'
#    defaults:
#      run:
#        working-directory: ./platform/staging
#    env:
#      TF_VAR_checkly_account_id: ${{ secrets.CHECKLY_ACCOUNT_ID }}
#      TF_VAR_checkly_api_key: ${{ secrets.CHECKLY_API_KEY }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          submodules: 'recursive'
#          token: ${{ secrets.PAT_TOKEN }}
#      - name: Configure AWS Credentials via OIDC
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: arn:aws:iam::637423371551:role/ChecklyTetsing
#          aws-region: us-east-2  
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#      - name: Clean up existing global files
#        run: |
#          rm -f global_modules.tf global_variables.tf  
#      - name: Create Symlinks for Shared Files
#        run: |
#          ln -s ../global_modules.tf .
#          ln -s ../global_variables.tf .   
#      - name: Terraform Init
#        run: terraform init
#      - name: Terraform Format
#        run: terraform fmt -recursive
#      - name: Terraform Validate
#        run: terraform validate    
#      - name: Download Plan
#        uses: actions/download-artifact@v4
#        with:
#          name: staging-plan
#          path: ./platform/staging
#      - name: Download Lock File
#        uses: actions/download-artifact@v4
#        with:
#          name: staging-lock
#          path: ./platform/staging        
#      - name: Terraform Apply
#        run: terraform apply -auto-approve staging.tfplan
#      - name: Cleanup Terraform files
#        run: |
#          rm -rf .terraform
#          rm -f terraform.tfstate terraform.tfstate.backup
#          rm -f *.tfplan
#          rm -f .terraform.lock.hcl
#        working-directory: ./platform/staging  

  plan-production:
    name: 'Plan Production'
    runs-on: ubuntu-latest
    needs: [changes, apply-staging]
    if: always() && (needs.changes.outputs.production == 'true' || needs.changes.outputs.modules-euna == 'true')
    environment: Checkly_Production_Deployment
    defaults:
      run:
        working-directory: ./platform/production
    env:
      TF_VAR_checkly_account_id: ${{ secrets.CHECKLY_ACCOUNT_ID }}
      TF_VAR_checkly_api_key: ${{ secrets.CHECKLY_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.PAT_TOKEN }}
  
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::637423371551:role/ChecklyTetsing
          aws-region: us-east-1    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Clean up existing global files
        run: |
          rm -f global_modules.tf global_variables.tf  
      - name: Create Symlinks for Shared Files
        run: |
          ln -s ../global_modules.tf .
          ln -s ../global_variables.tf .  
          
      - name: Terraform Init
        run: terraform init
      - name: Terraform Format
        run: terraform fmt -recursive
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan -out=production.tfplan -input=false
      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: production-plan
          path: ./platform/production/production.tfplan
      - name: Upload Lock File
        uses: actions/upload-artifact@v4
        with:
          name: production-lock
          path: platform/production/.terraform.lock.hcl
          include-hidden-files: true
      - name: Cleanup Terraform files
        run: |
          rm -rf .terraform
          rm -f terraform.tfstate terraform.tfstate.backup
          rm -f *.tfplan
          rm -f .terraform.lock.hcl
        working-directory: ./platform/production

  apply-production:
    name: 'Apply Production'
    runs-on: ubuntu-latest
    needs: plan-production
    if: always() && needs.plan-production.result == 'success'
    defaults:
      run:      
        working-directory: ./platform/production
    env:
      TF_VAR_checkly_account_id: ${{ secrets.CHECKLY_ACCOUNT_ID }}
      TF_VAR_checkly_api_key: ${{ secrets.CHECKLY_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.PAT_TOKEN }}
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::637423371551:role/ChecklyTetsing
          aws-region: us-east-1    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Clean up existing global files
        run: |
          rm -f global_modules.tf global_variables.tf  
      - name: Create Symlinks for Shared Files
        run: |
          ln -s ../global_modules.tf .
          ln -s ../global_variables.tf .  
      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: production-plan
          path: ./platform/production
      - name: Download Lock File
        uses: actions/download-artifact@v4
        with:
          name: production-lock
          path: ./platform/production    
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve production.tfplan
      - name: Cleanup Terraform files
        run: |
          rm -rf .terraform
          rm -f terraform.tfstate terraform.tfstate.backup
          rm -f *.tfplan
          rm -f .terraform.lock.hcl
        working-directory: ./platform/production
